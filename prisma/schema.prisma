datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

model Tip {
  id      String    @id @default(dbgenerated()) @map("_id") @db.ObjectId
  image   String
  titleEn String
  titleVi String
  bodyEn  String
  bodyVi  String
  UserTip UserTip[]
}

model Course {
  id            String       @id @default(dbgenerated()) @map("_id") @db.ObjectId
  name          String
  descriptionEn String
  descriptionVi String
  level         UserLevel    @default(NEWBIE)
  image         String
  lessons       Lesson[]
  UserCourse    UserCourse[]
}

model Lesson {
  id       String @id @default(dbgenerated()) @map("_id") @db.ObjectId
  order    Int
  nameEn   String
  nameVi   String
  videoId  String
  examSrc  String
  course   Course @relation(fields: [courseId], references: [id])
  courseId String @db.ObjectId
}

model User {
  id         String       @id @default(dbgenerated()) @map("_id") @db.ObjectId
  email      String       @unique
  name       String
  avatar     String?    
  password   String
  role       Role         @default(USER)
  level      UserLevel    @default(NEWBIE)
  plan       Plan         @default(FREE)
  createdAt  DateTime     @default(now())
  UserTip    UserTip[]
  UserCourse UserCourse[]
}

model UserTip {
  id        String   @id @default(dbgenerated()) @map("_id") @db.ObjectId
  tip       Tip      @relation(fields: [tipId], references: [id])
  tipId     String   @db.ObjectId
  User      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())
}

model UserCourse {
  id           String         @id @default(dbgenerated()) @map("_id") @db.ObjectId
  course       Course         @relation(fields: [courseId], references: [id])
  courseId     String         @db.ObjectId
  User         User           @relation(fields: [userId], references: [id])
  userId       String         @db.ObjectId
  lessonOrder  Int            @default(0)
  createdAt    DateTime       @default(now())
  LessonAnswer LessonAnswer[]
}

model LessonAnswer {
  id           String     @id @default(dbgenerated()) @map("_id") @db.ObjectId
  lessonId     String
  examUrl      String
  userCourse   UserCourse @relation(fields: [userCourseId], references: [id])
  userCourseId String     @db.ObjectId
}

model Roadmap {
  id            String    @id @default(dbgenerated()) @map("_id") @db.ObjectId
  level         UserLevel @default(NEWBIE)
  name          String
  descriptionEn String
  descriptionVi String
  image         String
}

model Faq {
  id         String @id @default(dbgenerated()) @map("_id") @db.ObjectId
  questionEn String
  questionVi String
  answerEn   String
  answerVi   String
}

model Log {
  id      String   @id @default(dbgenerated()) @map("_id") @db.ObjectId
  content String
  time    DateTime @default(now())
}

enum Role {
  USER
  ADMIN
}

enum Plan {
  FREE
  SILVER
  GOLD
}

enum UserLevel {
  NEWBIE
  FRESHER
  JUNIOR
  SENIOR
}
